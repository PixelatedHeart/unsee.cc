server {
    listen          80;
    server_name     www.unsee.cc unsee.cc;
    access_log      off;
    return          301 https://unsee.cc$request_uri;
}

server
{
    server_name unsee.cc;
    root        /var/www/unsee/public/;

    include     nginx-bp/bootstrap/default.conf;

    ########## Your custom locations & settings ##########

    include     nginx-bp/ports/ssl.conf;
    include     nginx-bp/ssl/keys/unsee.conf;
    include     nginx-bp/ssl/settings.conf;

    fastcgi_buffering   0;
    client_body_buffer_size 50M;

    location  ~* /socket.io/(.*)$ {
        proxy_read_timeout      3600;
        access_log  off;
        proxy_pass  http://127.0.0.1:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /upload/ {
        include     nginx-bp/enable/uploads.conf;
        include     nginx-bp/enable/php.conf;
    }

    #Rewrite request to image view controller
    rewrite ^/(?<hash>(?:[stnmrgzdbp][aeiou])+)/?$  /view/index/hash/$hash/;

    location ~ /(css|js)/ {
        concat on;
        access_log      off;
        log_not_found   off;
        expires         1y;
    }

    location /view/index/hash {
        limit_req       zone=reqPerSec1 nodelay burst=5;
        include         nginx-bp/enable/php.conf;
    }

    #Rewrite request to image content output controller
    rewrite ^/image/(?<imgId>[a-z0-9]+)/(?<ticket>[\w\-]+)/(?<time>[0-9]+)/?$  /view/image/id/$imgId/ticket/$ticket/time/$time/;

    # Handle the image request
    location ~ ^/view/image/id/(?<imgId>\w+)/ticket/(?<ticket>[\w\-]+)/time/(?<time>[0-9]+)/?$
    {
        internal;

        # Fetch 1 image at a time
        limit_req               zone=reqPerSec1 burst=20;

        secure_link     $ticket,$time;
        secure_link_md5 $imgId$time;

        if ($secure_link = "") {
            return 444;
        }

        if ($secure_link = "0") {
            return 444;
        }

        include     nginx-bp/enable/php.conf;
    }
}